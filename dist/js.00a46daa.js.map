{"version":3,"sources":["js/models/stocks.js","js/controllers/stock-controller.js","js/fetch/get-requests.js","js/index.js"],"names":["stockValues","stockDates","setStockValues","values","i","push","setStockDates","dates","getStockValues","getStockDates","getStockDate","stockDateMarkup","slice","map","date","view","elem","document","createRange","createContextualFragment","children","getStockVal","data","stockMarkup","stock","Object","getStocksRequest","url","func","symbol","params","URLSearchParams","search","set","toString","result","fetch","then","response","json","querySelector","addEventListener","e","preventDefault","innerHTML","target","elements","series","value","searchSymbol","request","val","info","keys","forEach","item","append"],"mappings":";;AGAA;;AACA;;AACA;ADFA;ADAA,AEKCiB,QAAQ,CAACuB,aAAT,CAAuB,aAAvB,EAAsCC,gBAAtC,CAAuD,QAAvD,EAAgE,UAACC,CAAD,EAAM;ADHvE,ACIGA,AHLH,EGKGA,CAAC,CAACC,AHLD3C,WAAW,GGKZ,AHLe,EAAlB;ACCA,ACCA,ACIGiB,AHLH,EGKGA,EHLChB,KCAKS,CEKE,CAAC8B,GHLE,GAAG,EAAjB,ECAA,ADCA,GCDuB,AEKpB,CAAuB,UAAvB,EAAmCI,SAAnC,GAA+C,EAA/C;AFJC,ACCJ,ACIG,MFLOrC,AEKDqB,IAAI,CFLE,EEKCc,CFLE,AEKD,CAACG,MAAF,CAASC,QAAT,CAAkBC,MAAlB,CAAyBC,IFLrC,CEKD;AFJC,ACCJ,ACIG,AHJH,MCDUrC,AEKDkB,GHJA3B,GGIM,GAAGwC,CAAC,CAACG,IFLK,EEKP,AHJlB,CCD4BtC,AEKDuC,AHJH3C,KCDS,CAACS,ADClC,EGIkB,AHJa,CGIKqC,EFLR,CAAY,CAAZ,EAAe,EAAf,EAAmBpC,EEK7B,CFLU,AEKqBmC,CFLE,IEKhD,MFLgDlC,IAAI,EAAI;AACnD,ACCR,ACIG,AHJCd,EAAAA,IGIKkD,EFLKnC,IAAI,CEKF,AHJD,GGII,AHJD,EAAd,iCGIgC,oCAAjB,EAAuDa,IAAvD,EAA6DC,MAA7D,CAAhB,UFHiCf,IAFlB,iFAAV;AAKA,ACFR,ACGG,MAAIP,EFDOS,CCFLU,ECGG,CFDM,EECH,CFDMT,CEClB,OFD0B,CAACC,CCF9B,CAA0BS,GAA1B,EAA+BC,IDEV,ACFrB,EAAqCC,CDEOV,KCF5C,EAA4C,iBDEvB,CAAgDJ,IAAhD,EAAsDK,QAAtD,CAA+D,CAA/D,CAAb;AAEA,ACFJ,ACED8B,AHLC,EGKDA,IDFOpB,CFHD,EGKC,CAACO,CFAIrB,ADLFZ,CEGG,AFHZ,EGKD,CFAK,ACFW,ACEH,CHLED,GEGK4B,GFHnB,EAAqB,CGKTT,IAAI,EAAG,GDFJ,CAAoBK,GAAG,CAACK,MAAxB,CAAf;ADGC,ACFDF,ACEE,AHLE9B,EEGJ8B,CDPwB,CAAxB,ADII9B,IEGE,CAACiC,GAAP,CAAW,EFHI,CAAC5B,IAAZ,CAAiBF,EEGrB,EAAuByB,EFHI,CAACxB,CEG5B,AFH2B,CAAvB,CEAoC,CAGV;ADG9B,AEAE,AHLD,QGKO+C,CFADxC,EEAI,GAAGc,MAAM,CAACtB,GFArB,GEAc,CAAcmB,IAAd,CAAZ;AFGL,ACLGQ,ACGE,AHLL,EEEGA,MAAM,ACGEsB,CDHDnB,GAAP,ACGY,CDHD,ECGIkB,GAAG,CAAC,CAAD,CDHlB,ACGE,EDHmBtB,MAArB;AACAC,ACGE,EDHFA,MAAM,CAACG,GAAP,CAAW,QAAX,EAAqB,SCGJmB,IAAf,KDHF,EALwC,CAKG;ADM/C,AEDM7C,AHPN,IGOMA,KFCGc,AEDE,AHPFf,CGOGD,IAAN,CAAWoB,KFCjB,CEDuB,CAAC4B,AHPxB,CCQsB,ADRC9C,GGON,CAAY6C,CHP7B,EAA6B,CGOZ,CAAX;AFEF,ACNAtB,ACKE,AHPF7B,EEEA6B,AFFA7B,ICQMqB,ECNA,CAACY,CDMG,EDRA,CCQG,EDRA,EEEb,AFFA,cGOgB3B,KAAd,EAPiB,CASjB,GFDF;AACA,ACLA,ACME,AHTFN,EAAAA,ICQMsB,ACLAY,MAAM,AFHF,GEGKC,AFHF7B,ECQI,GAAGe,ACLA,AFHpB,CEGqBK,GDKG,ACLA,CDKCf,ECLEkB,GDKP,CAAW,CAAX,CCLA,CDKc,ACLnB,CACdO,CDImB,EAAkBxB,CCLvB,CACT,CDIc,CAAsB,QCJpCyB,EDIoCd,KAAK,CCJjC,CDIqC;AAC/C,ACLU,ACMZ,AHTL,QCQaT,GCLQuB,CDKJ,OCLY,CAACC,IAAT,EAAJ,qFDOiBd,MAAM,CAACtB,MAAP,CAAcqB,KAAd,EAAqB,CAArB,CAFjB,oDAGiBC,MAAM,CAACtB,MAAP,CAAcqB,KAAd,EAAqB,CAArB,CAHjB,mDAIgBC,MAAM,CAACtB,MAAP,CAAcqB,KAAd,EAAqB,CAArB,CAJhB,qDAKkBC,MAAM,CAACtB,MAAP,CAAcqB,KAAd,EAAqB,CAArB,CALlB,iFAAV;AAQA,ACbU,ACOZ,GDRa,EACoB,GDazBR,IAAI,GAAGC,QAAQ,CAACC,WAAT,GAAuBC,wBAAvB,CAAgDJ,IAAhD,EAAsDK,QAAtD,CAA+D,CAA/D,CAAb;AACA,ACfW,ACSb,AHTN,GEEKiB,IAFc,CAET,CFFD7B,ECeMQ,IAAP,GCbEM,IAAI,CFFd,GAAyB;ACgBpB,ACdS,ACQR,AHTF,GCIoB,CAApB,CAFkB,CAclB,GDhBOtB,EECOsB,IAAJ,KFDV;AECU,ACSR,AHTL,GEFkB,CAAf,CARwC,CAUpB;ADgBpB,SAAOC,WAAP;AAEH,ACjBG,ACUE,AHTN,SEDWY,AFCF1B,MEDL,OFCJ,GAAwB,eGSJ6C,OAAd,CAAsB,UAAAC,IAAI;ADT/B,ACS+B,AHR5B,SAAOtD,IGSHgB,MHTa,CAAC,CGSN,AHTK,CGSJuB,AHTb,aGSI,CAAuB,UAAvB,EAAmCgB,MAAnC,CAA0CD,IAA1C,CADwB;AAAA,AHP/B,KGOK;AAEF,GAnBD;AAqBD,CA5BD","file":"js.00a46daa.js","sourceRoot":"..\\src","sourcesContent":["\r\nlet stockValues = [];\r\nlet stockDates = [];\r\n// let once; //no value - undefined\r\n\r\nfunction setStockValues(values){\r\n    stockValues = [];\r\n    for (var i in values){\r\n        stockValues.push(values[i])\r\n    }\r\n}\r\nfunction setStockDates(dates){\r\n    stockDates = [];\r\n    stockDates = dates;\r\n}\r\n\r\nfunction getStockValues(){\r\n    return stockValues;\r\n}\r\n\r\nfunction getStockDates(){\r\n    return stockDates[0];\r\n}\r\n\r\n\r\n\r\n\r\nexport {setStockValues, getStockValues, setStockDates, getStockDates};\r\n\r\n \r\n\r\n\r\n  \r\n\r\n \r\n\r\n\r\n \r\n\r\n","import {getStockValues, getStockDates} from '../models/stocks.js';\r\n\r\nfunction getStockDate(){\r\n    const dates = getStockDates();\r\n    const stockDateMarkup = dates.slice(0, 10).map(date => {\r\n        const view = `\r\n                    <aside class=\"stoc-values\">\r\n                        <h3>Date: ${date}</h3>                   \r\n                    </aside>\r\n                    `\r\n        const elem = document.createRange().createContextualFragment(view).children[0];\r\n        \r\n        return elem;\r\n    })\r\n    return stockDateMarkup;\r\n    \r\n    \r\n}\r\n\r\nfunction getStockVal(){\r\n    const data = getStockValues();\r\n    const stockMarkup = data.slice(0, 10).map(stock => {\r\n        const view = `\r\n                    <aside class=\"stoc-values\">\r\n                        <p>open: ${Object.values(stock)[0]}</p>\r\n                        <p>high: ${Object.values(stock)[1]}</p>\r\n                        <p>low: ${Object.values(stock)[2]}</p>\r\n                        <p>close: ${Object.values(stock)[3]}</p>                    \r\n                    </aside>\r\n                    `\r\n        const elem = document.createRange().createContextualFragment(view).children[0];\r\n        return elem;\r\n    })\r\n    // console.log(stockMarkup)\r\n    return stockMarkup;\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport {getStockVal, getStockDate};","//all get requests\r\n\r\n/*\r\n@function: getStocksRequest\r\n@params: url: api param url string\r\n@description: send through a request to retrieve the required data from the api object \r\n*/\r\n\r\nfunction getStocksRequest(url, func, symbol){\r\n\r\n    const params = new URLSearchParams(url.search);\r\n    params.set('function', func); //query param\r\n    params.set('symbol', symbol);\r\n    params.set('apikey', 'IDSM9WY7P551RX1V');  // api key\r\n    params.toString;\r\n\r\n    const result = fetch(url + params)\r\n    .then(response => response.json()) //get response from API\r\n    .then(data => data) // get data from response from API\r\n    return result;\r\n}\r\n\r\n \r\n\r\nexport {getStocksRequest}\r\n \r\n ","import { getStockVal, getStockDate } from './controllers/stock-controller.js';\nimport {getStocksRequest} from './fetch/get-requests.js';\nimport {setStockDates, setStockValues} from './models/stocks.js';\n\n\n document.querySelector('.search-api').addEventListener('submit',(e) =>{\n   e.preventDefault();\n   document.querySelector('.results').innerHTML = \"\";\n   const func = e.target.elements.series.value;\n   const symbol = e.target.elements.searchSymbol.value;\n   const request = getStocksRequest(\"https://www.alphavantage.co/query?\", func, symbol);\n   let dates = [];\n   request.then(data =>{\n      //save data to imported file\n      const val = Object.values(data)\n      const info = val[1]\n      setStockValues(info);\n\n      dates.push(Object.keys(info))\n      setStockDates(dates);\n\n      // const count = getStockDate.length;\n      // const x = getStockDate();\n      // const y = getStockVal();\n      // for (let i = 0; i<count; i++){\n      //   document.querySelector('.results').append(x[i]);\n      //   document.querySelector('.results').append(y[i]);\n      // }\n\n      getStockVal().forEach(item => \n        document.querySelector('.results').append(item));\n   }) \n   \n })"]}